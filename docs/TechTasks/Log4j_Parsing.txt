  Log4j Parsing - парсер текстового формата файлов для настройки
   логов.
   
Причины: оказалось, что логирование очень удобно использовать при
 разработке ПО, и, в частности, при работе с видео. Порывшись в
 интернете, нашел интересную библиотеку Boost.Logging, которую
 и использую уже. Все хорошо, только в ней отсутствует функционал
 чтения того, куда и как выводить лог, из файла. Вот пример файла,
 подробности в http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PropertyConfigurator.html#doConfigure(java.lang.String,%20org.apache.log4j.spi.LoggerRepository%29:
 
    # For appender named appenderName, set its class.
    # Note: The appender name can contain dots.
    log4j.appender.appenderName=fully.qualified.name.of.appender.class
    # Set appender specific options.
    log4j.appender.appenderName.option1=value1
    ...
    # Layout
    log4j.appender.appenderName.layout=fully.qualified.name.of.layout.class
    log4j.appender.appenderName.layout.option1=value1
    ...
    log4j.appender.appenderName.layout.optionN=valueN
    # Configure
    log4j.rootLogger=[level], appenderName, appenderName
    
Замечания: это отличная тема для применения универсальной библиотеки Boost.Spirit!
 К примеру, вот - тут http://spirit.sourceforge.net/repository/applications/show_contents.php,
 есть парсеры, написанные с помощью нее, для XML, rfc821 языков C, Pascal, SQL;
 - о log4j: http://logging.apache.org/log4j/1.2/index.html
 - синтаксис формата log4j:
   http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PropertyConfigurator.html
        #doConfigure(java.lang.String,%20org.apache.log4j.spi.LoggerRepository)

 Очевидно, что для log4j-формата все проще сделать. :)
